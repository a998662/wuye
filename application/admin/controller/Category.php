<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/3/11
 * Time: 23:04
 */

namespace app\admin\controller;
use tree\Tree;
use app\model\Category as CateModel;

class Category extends Init
{
    function initialize() {
        parent::initialize(); // TODO: Change the autogenerated stub
        $rootCate = CateModel::where('parent_id = 0')->order(array("sort" => "ASC"))->select();
        $category = CateModel::getLists(0);

        $Tree     = new Tree($category, 'id', 'parent_id');
        $category = $Tree->convert(0);

        $this->assign('rootCate', $rootCate);
        $this->assign('category', $category);
    }

    //文章栏目
    function index(){
		$max_level = $this->request->get('max', 0);
		$pid = input('cate_pid') ?: 0;

		$menus = $this->getNestCate(CateModel::getLists($pid), $max_level, $pid);

		$this->assign('menus', $menus);
		$this->assign('cate_pid', $pid);
        return $this->fetch();
    }

    //添加文章栏目
    function add(){
        $info['parent_id'] = input('parent_id');
        $this->assign('info', $info);
        if(isAjax()){
			$this->save();
        }
        return $this->fetch('info');
    }

    //编辑文章栏目
    function edit(){
        $info = CateModel::find(input('parent_id'));

        $this->assign('info', $info);
        if(isAjax()){
			$this->save();
        }
        return $this->fetch('info');
    }

    function save(){
		$data = input('post.');
        $data['status'] = $data['status'] ? 1 : 0;
		if (!empty($data['menus'])){
			$menus = $this->parseMenu($data['menus'],$data['cate_pid']);
			foreach ($menus as $menu) {
				CateModel::update($menu);
			}
			return $this->success('操作成功');
		}elseif($data){
			if($data['id'])
				$res = CateModel::update($data);
			else
				$res = CateModel::insert($data);

			$res ? $this->success('操作成功~') : $this->error('操作失败~');
		}
	}


	/**
	 * 获取嵌套式节点
	 * @param array $lists 原始节点数组
	 * @param int $parent_id 父级id
	 * @param int $max_level 最多返回多少层，0为不限制
	 * @param int $curr_level 当前层数
	 * @author 胡卫兵 <659998662@qq.com>
	 * @return string
	 */
	private function getNestCate($lists = [], $max_level = 0, $parent_id = 0, $curr_level = 1)
	{
		$cate_pid = input('cate_pid/d');
		$result = '';
		foreach ($lists as $key => $value) {
			if ($value['parent_id'] == $parent_id) {
				$disable  = $value['status'] == 0 ? 'dd-disable' : '';

				// 组合节点
				$result .= '<li class="dd-item dd3-item '.$disable.'" data-id="'.$value['id'].'">';
				$result .= '<div class="dd-handle dd3-handle">拖拽</div><div class="dd3-content"><i class="'.$value['icon'].'"></i> '.$value['name'];

				$result .= '<div class="action">';
				$result .= '<a class="pop" href="'.url('/category/add', ['parent_id' => $value['id']]).'" data-toggle="tooltip" data-original-title="新增子节点"><i class="list-icon fa fa-plus fa-fw"></i></a><a class="pop" href="'.url('/category/edit', ['parent_id' => $value['id'],'cate_pid' => $cate_pid]).'" data-toggle="tooltip" data-original-title="编辑"><i class="list-icon fa fa-pencil fa-fw"></i></a>';
				if ($value['status'] == 0) {
					// 启用
					$result .= '<a href="javascript:void(0);" data-ids="'.$value['id'].'" class="enable" data-toggle="tooltip" data-original-title="启用"><i class="list-icon fa fa-check-circle-o fa-fw"></i></a>';
				} else {
					// 禁用
					$result .= '<a href="javascript:void(0);" data-ids="'.$value['id'].'" class="disable" data-toggle="tooltip" data-original-title="禁用"><i class="list-icon fa fa-ban fa-fw"></i></a>';
				}
				$result .= '<a href="'.url('/category/del', ['id' => $value['id'], 'table' => 'category']).'" data-toggle="tooltip" data-original-title="删除" class="ajax-get confirm"><i class="list-icon fa fa-times fa-fw"></i></a></div>';
				$result .= '</div>';

				if ($max_level == 0 || $curr_level != $max_level) {
					unset($lists[$key]);
					// 下级节点
					$children = $this->getNestCate($lists, $max_level, $value['id'], $curr_level + 1);
					if ($children != '') {
						$result .= '<ol class="dd-list">'.$children.'</ol>';
					}
				}

				$result .= '</li>';
			}
		}
		return $result;
	}

	/**
	 * 递归解析节点
	 * @param array $menus 节点数据
	 * @param int $pid 上级节点id
	 * @author 胡卫兵 <659998662@qq.com>
	 * @return array 解析成可以写入数据库的格式
	 */
	private function parseMenu($menus = [], $pid = 0)
	{
		$sort   = 1;
		$result = [];
		foreach ($menus as $menu) {
			$result[] = [
				'id'   => (int)$menu['id'],
				'parent_id'  => (int)$pid,
				'sort' => $sort,
			];
			if (isset($menu['children'])) {
				$result = array_merge($result, $this->parseMenu($menu['children'], $menu['id']));
			}
			$sort ++;
		}
		return $result;
	}
}