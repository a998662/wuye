<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/2/20
 * Time: 21:44
 */

namespace app\admin\controller;

use app\model\Articles;
use tree\Tree;

class Help extends Init {
    function initialize() {
        parent::initialize(); // TODO: Change the autogenerated stub
        $Category = new \app\model\Category();
        $category = $Category->getLists(4);
        //树形处理
        $Tree = new Tree($category, 'id', 'parent_id');
        $category = $Tree->convert(4);
        $this->assign('category', $category);
    }

    //文章列表页
    public function index() {
        $search_field = input('search_field');
        $value        = input('keyword');
        $where[]      = ['insert_time', '>', 0];

        $search_field = explode('|', $search_field);
        if ($value) {
            if (count($search_field) > 1) {
                $map1 = ['a.title', 'LIKE', "%" . $value . "%"];
                $map2 = ['a.tags', 'FIND_IN_SET', $value];
                $map3 = ['b.name', 'LIKE', "%" . $value . "%"];
                $article = Articles::alias('a')->field('a.*,b.name')->join('category b', 'a.cat_id=b.id')->whereOr([$map1, $map2, $map3])->order('id desc')->paginate(10);
            } else {
                switch ($search_field[0]) {
                    case 'title':
                        $where[] = ['a.title', 'like', "%" . $value . "%"];
                    break;
                    case 'tags':
                        $where[] = ['a.tags', 'FIND_IN_SET', $value];
                    break;
                    case 'catName':
                        $where[] = ['b.name', 'LIKE', "%" . $value . "%"];
                    break;
                }
                $article = Articles::alias('a')->field('a.*,b.name')->join('category b', 'a.cat_id=b.id')->where($where)->order('id desc')->paginate(10);
            }
        }else{
            $article = Articles::alias('a')->field('a.*,b.name')->join('category b', 'a.cat_id=b.id')->where($where)->order('id desc')->paginate(10);
        }


        $this->assign('article', $article);
        return $this->fetch();
    }

    //添加文章
    public function add() {
        if (isAjax()) {
            $data                = input('post.');
            $data['user_id']     = session('admin.id');
            $data['content']     = nl2br($data['content']);
            $data['username']    = session('admin.username');
            $data['insert_time'] = time();
            $data['update_time'] = time();
            $data['content']     = clearCss($data['editorValue']);

            unset($data['id']);
            unset($data['editorValue']);

            $code = db('article')->insertGetId($data);
            $msg  = $code ? '添加成功' : '添加失败';

            if ($code) $this->success($msg, prevUrl()); else
                $this->error($msg);
        }

        return $this->fetch('info');
    }

    //编辑文章
    public function edit() {
        if (isAjax()) {
            $data = input('post.');
            $data['update_time'] = time();
            $data['content'] = clearCss($data['editorValue']);
            unset($data['editorValue']);

            $code = db('article')->update($data);
            $msg  = $code ? '编辑成功' : '编辑失败';

            if ($code) $this->success($msg, prevUrl()); else
                $this->error($msg);
        }
        $info = db('article')->find(input('id'));
        $this->assign('info', $info);

        return $this->fetch('info');
    }
}