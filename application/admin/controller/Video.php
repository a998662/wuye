<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/2/20
 * Time: 21:44
 */

namespace app\admin\controller;

use app\model\Category;
use think\Db;

class Video extends Init {
    function initialize() {
        parent::initialize(); // TODO: Change the autogenerated stub
        $Channel = Category::where('parent_id', 0)->select();
        $this->assign('Channel', $Channel);
    }

    //文章列表页
    public function index() {
        $status  = input('status');
        $title   = input('title');
        $channel = input('channel/s');

        $channel == true && $where[] = ['channel', '=', $channel];
        $title == true && $where[] = ['title|tags', 'like', "%$title%"];
        is_numeric($status) == true && $where[] = ['status', '=', $status];

        $video = Db::name('video')->field('id,cat_id,title,insert_time,play,status,good,comments,like')->where($where)->order('insert_time desc, id desc')->paginate(0, false, ['query' => input()]);

        $this->assign('status', $status);
        $this->assign('channel', $channel);
        $this->assign('video', $video);
        return $this->fetch();
    }

    //导入操作
    public function flag() {
        $ids  = input('post.');
        $flag = input('flag/d');

        Db::name('video')->where('id', 'in', $ids['ids'])->setField(['flag' => $flag]);

        if ($ids['ids']) {
            $data = [
                'username'    => session('admin.username'),
                'table'       => 'video',
                'remark'      => '更新ID为[' . implode(',', $ids['ids']) . ']的数据',
                'action_ip'   => get_client_ip(),
                'action_time' => time(),
            ];
            addSysLog($data);
        }

        $this->success('操作成功');
    }

    //添加文章
    public function add() {
        $channel = input('channel') ?: 1;
        if (isPost()) {
            $data    = input('post.');
            $where[] = ['title', '=', $data['data']['title']];
            $res     = Db::name('video')->where($where)->find();
            $res && $this->error('此视频以添加过');
            $code = $this->info_save();
            $msg  = $code ? '添加成功' : '添加失败';
            if ($code) {
                $this->success($msg, input('prevUrl'));
            } else {
                $this->error($msg);
            }
        }

        $cats = Category::where([['status', '=', 1], ['parent_id', '=', $channel]])->select();

        $this->assign('cats', $cats);
        $this->assign('channel', $channel);
        return $this->fetch('info');
    }

    //资讯修改、添加操作
    function info_save() {
        $data = input('post.');
        $cat_id = $data['cat_id'];
        $content = $data['editorValue'];
        $channel = Category::where('id', $cat_id)->value('alias');
        $data['insert_time'] = time();
        $data['update_time'] = time();
        $data['channel']     = $channel;
        $data['status']      = 1;


        if(in_array($channel,['mp3','tupian','meinv','xiaoshuo'])){
            $data['content'] = clearCss($content);
        }else{
            $data['content'] = $content;
        }
        if($cat_id == 5){
            $data['tags'] = implode(',',$data['tags']);
            $data['cat_id'] = Category::where('name',$data['tags'])->value('id');
        }else{
            $data['tags'] = implode(',',$data['tags']);
        }

        unset($data['editorValue']);
        try {

            if ($data['id']) {
                Db::name('video')->update($data);
            } else {
                $id = Db::name('video')->insertGetId($data);
            }
        } catch (\Exception $e) {
            return 0;
        }
        return 1;
    }

    //编辑文章
    public function edit() {
        if (isPost()) {
            $code = $this->info_save();
            $msg  = $code ? '编辑成功' : '编辑失败';
            if ($code) {
                $this->success($msg, input('prevUrl'));
            } else {
                $this->error($msg);
            }
        }
        $info    = Db::name('video')->find(input('id'));
        $channel = input('channel') ?: Category::where('alias', $info['channel'])->value('id');
        $cats    = Category::where([['status', '=', 1], ['parent_id', '=', $channel]])->select();
        $cats    = $cats ? $cats->toArray() : [];

        $info['tags'] = explode(',', $info['tags']);
        $info['type'] = $channel;

        $this->assign('cats', $cats);
        $this->assign($info);
        return $this->fetch('info');
    }
}