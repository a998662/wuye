<?php
/**
 * Created by PhpStorm.
 * User: 65998
 * Date: 2018/5/17
 * Time: 10:51
 */

namespace app\home\controller;


use app\model\Category;
use app\model\Video;
use think\Controller;
use think\facade\Cookie;
use think\facade\Request;

class Index extends Controller {
    public $alias      = '';
    public $cat_id     = '';
    public $cache_time = 60;

    public function initialize() {
        parent::initialize(); // TODO: Change the autogenerated stub
        if(!input('active')){
            $channel = Category::field('id,name,alias')->where([
                ['status', '=', 1],
                ['parent_id', '=', 0]
            ])->order('sort')->select();

            $alias        = strtolower(Request::controller());
            $cat_id       = Category::where('alias', $alias)->value('id');
            $this->cat_id = $cat_id;
            $this->alias  = $alias;
            $cats         = Category::where('parent_id', $cat_id)->select()->toArray();

            //当前频道下前三个子类排行前十视频
            if (Request::action() == 'play' || Request::action() == 'detail') {
                foreach ($cats as $k => $v) {
                    if ($k < 3) {
                        $list = Video::field('id,title,score,channel')->where([
                            ['tags', 'like', '%' . $v['name'] . '%'],
                            ['status', '=', 1]
                        ])->order('score desc')->limit(10)->select();
                        if ($list) {
                            $catlist[$k]         = $v;
                            $catlist[$k]['data'] = $list;
                            unset($list);
                        }
                    }
                }
                $this->assign(['rightTop' => $catlist]);
            }

            //var_dump($channel);
            $this->assign('channel', $channel);
            $this->assign('action', strtolower(Request::action()));
            $this->assign('alias', $alias);
            $this->assign('cats', $cats);
        }
    }

    public function index() {
        $shipin   = Video::field('id,title,thumb,tags,score,channel')->where([
            ['channel', '=', 'shipin'],
            ['status', '=', 1]
        ])->order('insert_time desc')->cache($this->cache_time)->limit(17)->select();
        $spphb    = Video::field('id,title,thumb,tags,score,channel')->where([
            ['channel', '=', 'shipin'],
            ['status', '=', 1]
        ])->order('score desc')->cache($this->cache_time)->limit(13)->select();
        $xiazai   = Video::field('id,title,thumb,tags,score,channel')->where([
            ['channel', '=', 'xiazai'],
            ['status', '=', 1]
        ])->order('id desc')->cache($this->cache_time)->limit(18)->select();
        $meinv    = Video::field('id,title,thumb,tags,score,channel')->where([
            ['channel', '=', 'meinv'],
            ['status', '=', 1]
        ])->order('id desc')->cache($this->cache_time)->limit(12)->select();
        $tupian   = Video::field('id,title,thumb,tags,score,channel')->where([
            ['channel', '=', 'tupian'],
            ['status', '=', 1]
        ])->order('id desc')->cache($this->cache_time)->limit(12)->select();
        $xiaoshuo = Video::field('id,title,tags,score,channel')->where([
            ['channel', '=', 'xiaoshuo'],
            ['status', '=', 1]
        ])->order('id desc')->cache($this->cache_time)->limit(16)->select();
        $yousheng = Video::field('id,title,tags,score,channel')->where([
            ['channel', '=', 'mp3'],
            ['status', '=', 1]
        ])->order('id desc')->cache($this->cache_time)->limit(16)->select();

        $this->assign([
            'shipin'   => $shipin,
            'spphb'    => $spphb,
            'xiazai'   => $xiazai,
            'meinv'    => $meinv,
            'tupian'   => $tupian,
            'xiaoshuo' => $xiaoshuo,
            'yousheng' => $yousheng
        ]);

        $seo = [
            'title'       => config('web_site_title') . '-' . config('web_site_slogan'),
            'keywords'    => config('web_site_keywords'),
            'description' => config('web_site_description')
        ];

        $this->assign($seo);
        $this->assign('is_open', Cookie('is_open') ?: 0);
        Cookie::set('is_open', 1, 600);

        return $this->fetch('home');
    }

    public function lists() {
        if (strtolower(Request::controller()) == 'mp3') {
            $list = Category::where('parent_id', 5)->paginate(18, false, [
                'path' => "/$this->alias/list-[PAGE].html"
            ]);
        } else {
            $order   = input('order/s') ?: 'insert_time';
            $cat     = input('name/s') ?: 'all';
            $where[] = ['status', '=', 1];
            $where[] = ['cat_id', '=', $this->cat_id];
            $where[] = ['channel', '=', $this->alias];
            if ($this->alias == 'shipin' && $cat == '成人动漫') {
                ($cat != 'all' && $cat) && $where[] = ['tags', 'like', "%动漫%"];
            } else {
                ($cat != 'all' && $cat) && $where[] = ['tags', 'like', "%$cat%"];
            }

            $list = Video::field('id,title,thumb,tags,score,channel')->where($where)->order("$order desc")->paginate(18, false, [
                'path' => "/$this->alias/list-$cat-$order-[PAGE].html"
            ]);

            $title = Category::where('alias', $this->alias)->value('name');
            $cat && $subTitle = '-' . $cat;
            $seo = [
                'title'       => $title . $subTitle . '-' . config('web_site_title'),
                'keywords'    => $title . $subTitle . '-' . config('web_site_title'),
                'description' => $title . $subTitle . '-' . config('web_site_title'),
            ];

            $this->assign($seo);
            $this->assign(['cat' => $cat, 'order' => $order]);
        }

        $this->assign('list', $list);
        return $this->fetch('/index/list');
    }

    public function mp3list() {
        $order   = input('order/s') ?: 'insert_time';
        $id      = input('id/d');
        $where[] = ['status', '=', 1];
        $where[] = ['cat_id', '=', $id];
        $where[] = ['channel', '=', 'mp3'];

        $list = Video::field('id,title,tags,score,channel')->where($where)->cache($this->cache_time)->order("$order desc")->paginate(18, false, [
            'path' => "/mp3list/$id-$order-[PAGE].html"
        ]);
        $this->assign(['id' => $id, 'order' => $order]);

        $title = Category::where('id', $id)->value('name');
        $seo   = [
            'title'       => $title . '-' . config('web_site_title'),
            'keywords'    => $title . '-' . config('web_site_title'),
            'description' => $title . '-' . config('web_site_title'),
        ];

        $this->assign($seo);
        $this->assign('list', $list);
        return $this->fetch('/index/mp3list');
    }

    public function search() {
        $title   = input('kw/s');
        $order   = input('order/s') ?: 'insert_time';
        $active = input('active');

        if($active){
            $where[] = ['a.status', '=', 1];
            $where[] = ['channel', '<>', 'xiaoshuo'];
            $where[] = ['channel', '<>', 'mp3'];

            $list = Video::alias('a')->field('a.id,cat_id,title,a.thumb,tags,score,channel,name')->leftJoin('category b',"a.cat_id=b.id")->where($where)->where("LOCATE(:title,`title`) > 0", ['title' => $title])->order("$order desc")->paginate(18, false, [
                'query' => input(),
                'type'     => '\page\Pageajax',
                'var_page' => 'page',
            ]);

            $data = [
                'title'       => $title . '-' . config('web_site_title'),
                'keywords'    => $title . '-' . config('web_site_title'),
                'description' => $title . '-' . config('web_site_title'),
                'list'=>$list,
                'page'=>$list->render()
            ];
            return json_encode($data);
        }

        return $this->fetch();
    }

    public function newList() {
        return $this->fetch();
    }

    public function topList() {
        return $this->fetch();
    }

    public function test() {
        //echo curl_request('http://119.81.145.173/xiaoshuo/9753.html');
        $redis = new \Redis();
        $redis->connect('127.0.0.1','6379');
        return ;
    }


}